1007. Minimum Domino Rotations For Equal Row
 from typing import List

class Solution:
    def minDominoRotations(self, tops: List[int], bottoms: List[int]) -> int:
        def check(x):
            rotations_top = 0
            rotations_bottom = 0
            for i in range(len(tops)):
                # If neither top nor bottom has the value x, return an impossible signal
                if tops[i] != x and bottoms[i] != x:
                    return float('inf')
                # If top is not x, a rotation is needed to bring x to top
                elif tops[i] != x:
                    rotations_top += 1
                # If bottom is not x, a rotation is needed to bring x to bottom
                elif bottoms[i] != x:
                    rotations_bottom += 1
            return min(rotations_top, rotations_bottom)

        # Try making all values either tops[0] or bottoms[0]
        rotations = min(check(tops[0]), check(bottoms[0]))
        return rotations if rotations != float('inf') else -1
        
