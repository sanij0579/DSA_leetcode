1931. Painting a Grid With Three Different Colors
  solution:
from functools import lru_cache

MOD = 10**9 + 7

class Solution:
    def colorTheGrid(self, m: int, n: int) -> int:
        def generate_valid_columns(m):
            colors = [0, 1, 2]
            def backtrack(pos, path):
                if pos == m:
                    valid_columns.append(tuple(path))
                    return
                for c in colors:
                    if pos == 0 or path[-1] != c:
                        backtrack(pos + 1, path + [c])
            valid_columns = []
            backtrack(0, [])
            return valid_columns

        valid_columns = generate_valid_columns(m)
        index_map = {col: i for i, col in enumerate(valid_columns)}
        num_states = len(valid_columns)

        compat = [[] for _ in range(num_states)]
        for i in range(num_states):
            for j in range(num_states):
                if all(x != y for x, y in zip(valid_columns[i], valid_columns[j])):
                    compat[i].append(j)

        dp = [1] * num_states

        for _ in range(1, n):
            new_dp = [0] * num_states
            for i in range(num_states):
                for j in compat[i]:
                    new_dp[j] = (new_dp[j] + dp[i]) % MOD
            dp = new_dp

        return sum(dp) % MOD
